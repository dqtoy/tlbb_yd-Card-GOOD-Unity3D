<?xml version="1.0" encoding="UTF-8"?>
<project name="UnityPlayerProxyActivity" default="help">

    <!-- The local.properties file is created and updated by the 'android' tool.
         It contains the path to the SDK. It should *NOT* be checked into
         Version Control Systems. -->
    <property file="local.properties" />

    <!-- The ant.properties file can be created by you. It is only edited by the
         'android' tool to add properties to it.
         This is the place to change some Ant specific build properties.
         Here are some properties you may want to change/update:

         source.dir
             The name of the source directory. Default is 'src'.
         out.dir
             The name of the output directory. Default is 'bin'.

         For other overridable properties, look at the beginning of the rules
         files in the SDK, at tools/ant/build.xml

         Properties related to the SDK location or the project target should
         be updated using the 'android' tool with the 'update' action.

         This file is an integral part of the build system for your
         application and should be checked into Version Control Systems.

         -->
    <property file="ant.properties" />

    <!-- if sdk.dir was not set from one of the property file, then
         get it from the ANDROID_HOME env var.
         This must be done before we load project.properties since
         the proguard config can use sdk.dir -->
    <property environment="env" />
    <condition property="sdk.dir" value="${env.ANDROID_HOME}">
        <isset property="env.ANDROID_HOME" />
    </condition>

    <!-- The project.properties file is created and updated by the 'android'
         tool, as well as ADT.

         This contains project specific properties such as project target, and library
         dependencies. Lower level build properties are stored in ant.properties
         (or in .classpath for Eclipse projects).

         This file is an integral part of the build system for your
         application and should be checked into Version Control Systems. -->
    <loadproperties srcFile="project.properties" />

    <!-- quick check on sdk.dir -->
    <fail
            message="sdk.dir is missing. Make sure to generate local.properties using 'android update project' or to inject it through the ANDROID_HOME environment variable."
            unless="sdk.dir"
    />

    <!--
        Import per project custom build rules if present at the root of the project.
        This is the place to put custom intermediary targets such as:
            -pre-build
            -pre-compile
            -post-compile (This is typically used for code obfuscation.
                           Compiled code location: ${out.classes.absolute.dir}
                           If this is not done in place, override ${out.dex.input.absolute.dir})
            -post-package
            -post-build
            -pre-clean
    -->
    <import file="custom_rules.xml" optional="true" />

    <!-- Import the actual build file.

         To customize existing targets, there are two options:
         - Customize only one target:
             - copy/paste the target into this file, *before* the
               <import> task.
             - customize it to your needs.
         - Customize the whole content of build.xml
             - copy/paste the content of the rules files (minus the top node)
               into this file, replacing the <import> task.
             - customize to your needs.

         ***********************
         ****** IMPORTANT ******
         ***********************
         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,
         in order to avoid having your file be overridden by tools such as "android update project"
    -->
    <!-- version-tag: 1 -->
    <import file="${sdk.dir}/tools/ant/build.xml" />
	
	
	<!--
	<target name="-code-gen">
        <property name="proguard.enabled" value="false"/>
    </target>
    -->
    <target name="build" depends="clean,-compile,-post-compile">
        <property name="jar-name" value="tlbbkdtl.jar" />
        <property name="plugin.jar" value="${out.absolute.dir}/${jar-name}" />

        <echo>Creating ${out.dir}/${jar-name} ...</echo>
        <zip basedir="${out.classes.absolute.dir}"
             destfile="${plugin.jar}"
             filesonly="true"
             excludes="**/*.meta"
             />
		<copy todir="${out.absolute.dir}/../../jarout" file="${plugin.jar}"/> 
		<copy todir="${out.absolute.dir}/../../jarout" file="${out.absolute.dir}/../AndroidManifest.xml"/> 
        <copy todir="${out.absolute.dir}/../../jarout">
           <fileset dir="${out.absolute.dir}/../">
             <include name="res/" />
           </fileset>
       </copy>
	   
	   <copy todir="${out.absolute.dir}/../../../Client/AndroidPlugins/Android_cyou">
           <fileset dir="${out.absolute.dir}/../../jarout">
           </fileset>
       </copy>
	   
	  
             
        <property name="obfuscated-name" value="obfuscated_googleplaydownloader.jar" />
        <property name="obfuscated.jar" value="${out.absolute.dir}/${obfuscated-name}" />
        <delete file="${obfuscated.jar}"/>
    </target>
	
	<target name="unity" depends="build" >
	    <echo>if failed with not find unity.exe, please add unity path to PATH</echo>
		<echo>please wait... it would take ten min.</echo>
	    <exec executable="cmd.exe">
           <arg line="/c Unity.exe -quit -batchmode -executeMethod AutoEdit.Android_Build_CYOU_Auto_Update_Test" />
       </exec>
	</target>

    <target name="obfuscate" depends="build">
        <echo>Obfuscating ${out.dir}/${jar-name} ...</echo>

        <property name="proguard.jar" location="${android.tools.dir}/proguard/lib/proguard.jar" />
        <taskdef name="proguard" classname="proguard.ant.ProGuardTask" classpath="${proguard.jar}" />

                <pathconvert property="android.libraryjars" refid="android.target.classpath">
                    <firstmatchmapper>
                        <regexpmapper from='^([^ ]*)( .*)$$' to='"\1\2"'/>
                        <identitymapper/>
                    </firstmatchmapper>
                </pathconvert>
                
        <proguard>
            -include      "${proguard.config}"
            -injars       ${plugin.jar}
            -outjars      "${obfuscated.jar}"
            -libraryjars  "${android.libraryjars}"
        </proguard>
        
        <delete file="${plugin.jar}"/>
    </target>

    <target name="help">
        <echo>Android Ant Build. Available targets:</echo>
        <echo>   help:      Displays this help.</echo>
        <echo>   clean:     Removes output files created by the build target.</echo>
        <echo>   build:     Builds the tlbbkdtl.jar library for use with Unity Android and copy files to Plugins.</echo>
        <echo>   unity:     Builds an tlbbkdtl.jar and build unity project.</echo>
    </target>

</project>
